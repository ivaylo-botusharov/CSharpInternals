using Microsoft.CodeAnalysis;

namespace HelloWorldGeneratorWithStringSource;

[Generator]
public class HelloSourceGenerator : ISourceGenerator
{
    public void Execute(GeneratorExecutionContext context)
    {
        IMethodSymbol mainMethod = context.Compilation.GetEntryPoint(context.CancellationToken) ?? 
            throw new InvalidOperationException("Main method not found");

        string source = $@"// <auto-generated/>
            using System;

            namespace {mainMethod.ContainingNamespace.ToDisplayString()}
            {{
                public static partial class {mainMethod.ContainingType.Name}
                {{
                    static partial void SayHello() =>
                        Console.WriteLine(""Hello, World!"");
                }}
            }}
            ";

        var mainMethodContainingTypeName = mainMethod.ContainingType.Name;

        context.AddSource($"{mainMethodContainingTypeName}.g.cs", source);
    }

    public void Initialize(GeneratorInitializationContext context)
    {
        // No initialization required for this one
    }
}